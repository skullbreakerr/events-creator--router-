{"ast":null,"code":"var _jsxFileName = \"/home/admin1/React js/adv-react-router/frontend/src/App.js\";\n// Challenge / Exercise\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport EventsPage from './pages/EventsPage';\nimport NewEventsPage from './pages/EventsPage';\nimport EditEventPage from './pages/EventsPage';\nimport EventsDetailsPage from './pages/EventsDetailsPage.js';\nimport RootLayout from './pages/Root.js';\nimport ErrorPage from './pages/ErrorPage.js';\nimport Home from './pages/HomePage.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 18\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 32\n    }, this)\n  }, {\n    path: \"events/new\",\n    element: /*#__PURE__*/_jsxDEV(NewEventsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 35\n    }, this)\n  }, {\n    path: \"events/:id\",\n    element: /*#__PURE__*/_jsxDEV(EventsDetailsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 36\n    }, this)\n  }, {\n    path: \"events/:id/edit\",\n    element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 41\n    }, this)\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","EventsPage","NewEventsPage","EditEventPage","EventsDetailsPage","RootLayout","ErrorPage","Home","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","App","_c","$RefreshReg$"],"sources":["/home/admin1/React js/adv-react-router/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport {RouterProvider, createBrowserRouter} from 'react-router-dom';\nimport EventsPage from './pages/EventsPage';\nimport NewEventsPage from './pages/EventsPage';\nimport EditEventPage from './pages/EventsPage';\nimport EventsDetailsPage from './pages/EventsDetailsPage.js';\nimport RootLayout from './pages/Root.js';\nimport ErrorPage from './pages/ErrorPage.js';\nimport Home  from './pages/HomePage.js';\n\nconst router = createBrowserRouter([\n  {\n    path:\"/\",\n    element:<RootLayout/>,\n    errorElement:<ErrorPage/>,\n    children:[\n      {index:true, element: <Home/>},\n      {path:\"events\", element: <EventsPage/>},\n      {path:\"events/new\", element:<NewEventsPage/> },\n      {path:\"events/:id\", element: <EventsDetailsPage/>},\n      {path:\"events/:id/edit\", element: <EditEventPage/>},\n    ], \n  }\n])\nfunction App() {\n  return <RouterProvider router={router}/> ;\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,cAAc,EAAEC,mBAAmB,QAAO,kBAAkB;AACpE,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,iBAAiB,MAAM,8BAA8B;AAC5D,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,IAAI,MAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGV,mBAAmB,CAAC,CACjC;EACEW,IAAI,EAAC,GAAG;EACRC,OAAO,eAACH,OAAA,CAACJ,UAAU;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;EACrBC,YAAY,eAACR,OAAA,CAACH,SAAS;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;EACzBE,QAAQ,EAAC,CACP;IAACC,KAAK,EAAC,IAAI;IAAEP,OAAO,eAAEH,OAAA,CAACF,IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,CAAC,EAC9B;IAACL,IAAI,EAAC,QAAQ;IAAEC,OAAO,eAAEH,OAAA,CAACR,UAAU;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,CAAC,EACvC;IAACL,IAAI,EAAC,YAAY;IAAEC,OAAO,eAACH,OAAA,CAACP,aAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAE,CAAC,EAC9C;IAACL,IAAI,EAAC,YAAY;IAAEC,OAAO,eAAEH,OAAA,CAACL,iBAAiB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,CAAC,EAClD;IAACL,IAAI,EAAC,iBAAiB;IAAEC,OAAO,eAAEH,OAAA,CAACN,aAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,CAAC;AAEvD,CAAC,CACF,CAAC;AACF,SAASI,GAAGA,CAAA,EAAG;EACb,oBAAOX,OAAA,CAACV,cAAc;IAACW,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC1C;AAACK,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
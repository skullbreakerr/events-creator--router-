{"ast":null,"code":"var _jsxFileName = \"/home/admin1/React js/adv-react-router/frontend/src/pages/NewEventsPage.js\";\nimport { json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NewEventsPage() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New EventsPage here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = NewEventsPage;\nexport default NewEventsPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  const options = {\n    method: \"post\",\n    headers: {\n      \"Content-type\": \"Application/json\"\n    },\n    body: JSON.stringify(eventData)\n  };\n  const responseData = await fetch('http://localhost:8080/events', options);\n  if (!responseData.ok) {\n    return json({\n      message: \"Something went wrong cannot load resources\"\n    }, {\n      status: 500\n    });\n  } else {\n    const data = await responseData.json();\n    return data;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventsPage\");","map":{"version":3,"names":["json","jsxDEV","_jsxDEV","Fragment","_Fragment","NewEventsPage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","options","method","headers","body","JSON","stringify","responseData","fetch","ok","message","status","$RefreshReg$"],"sources":["/home/admin1/React js/adv-react-router/frontend/src/pages/NewEventsPage.js"],"sourcesContent":["import { json } from \"react-router-dom\";\n\nfunction NewEventsPage(){\n    return(\n        <>\n        <h1>New EventsPage here...</h1>\n        </>\n    )\n}\nexport default NewEventsPage;\n\nexport async function action({request,params}){\n    const data = await request.formData();\n    const eventData ={\n        title: data.get(\"title\"),\n        image: data.get(\"image\"),\n        date: data.get(\"date\"),\n        description: data.get(\"description\"),\n    }\n\n    const options={\n        method:\"post\",\n        headers:{\n            \"Content-type\": \"Application/json\"\n        },\n        body: JSON.stringify(eventData),\n    }\n    const responseData = await fetch('http://localhost:8080/events',options)\n\n    if(!responseData.ok){\n        return json({message:\"Something went wrong cannot load resources\"},{status:500});\n    }\n    else{\n        const data = await responseData.json();\n        return data;\n    }\n}"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,aAAaA,CAAA,EAAE;EACpB,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACAJ,OAAA;MAAAI,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC,gBAC7B,CAAC;AAEX;AAACC,EAAA,GANQN,aAAa;AAOtB,eAAeA,aAAa;AAE5B,OAAO,eAAeO,MAAMA,CAAC;EAACC,OAAO;EAACC;AAAM,CAAC,EAAC;EAC1C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACrC,MAAMC,SAAS,GAAE;IACbC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EAED,MAAMI,OAAO,GAAC;IACVC,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACJ,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,SAAS;EAClC,CAAC;EACD,MAAMY,YAAY,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAACP,OAAO,CAAC;EAExE,IAAG,CAACM,YAAY,CAACE,EAAE,EAAC;IAChB,OAAO/B,IAAI,CAAC;MAACgC,OAAO,EAAC;IAA4C,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACpF,CAAC,MACG;IACA,MAAMlB,IAAI,GAAG,MAAMc,YAAY,CAAC7B,IAAI,CAAC,CAAC;IACtC,OAAOe,IAAI;EACf;AACJ;AAAC,IAAAJ,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/admin1/React js/adv-react-router/frontend/src/App.js\";\n// Challenge / Exercise\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation.\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport EventsPage from './pages/EventsPage';\nimport NewEventsPage from './pages/NewEventsPage.js';\nimport EditEventPage from './pages/EditEventPage.js';\nimport EventsDetailsPage from './pages/EventsDetailsPage.js';\nimport RootLayout from './pages/Root.js';\nimport ErrorPage from './pages/ErrorPage.js';\nimport Home from './pages/HomePage.js';\nimport EventsRootLayout from './pages/EventsRootLayout.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 14\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 22\n      }, this),\n      loader: async () => {\n        const resp = await fetch(\"http://localhost:8888/events\");\n        if (!resp.ok) {\n          //TODO..Error Message\n          console.log(\"Some error has occured\");\n        } else {\n          const respData = await resp.json();\n          return respData.events;\n        }\n      }\n    }, {\n      path: \":id\",\n      element: /*#__PURE__*/_jsxDEV(EventsDetailsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 35\n      }, this)\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 35\n      }, this)\n    }, {\n      path: \":id/edit\",\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 40\n      }, this)\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","EventsPage","NewEventsPage","EditEventPage","EventsDetailsPage","RootLayout","ErrorPage","Home","EventsRootLayout","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","loader","resp","fetch","ok","console","log","respData","json","events","App","_c","$RefreshReg$"],"sources":["/home/admin1/React js/adv-react-router/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation.\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport EventsPage from './pages/EventsPage';\nimport NewEventsPage from './pages/NewEventsPage.js';\nimport EditEventPage from './pages/EditEventPage.js';\nimport EventsDetailsPage from './pages/EventsDetailsPage.js';\nimport RootLayout from './pages/Root.js';\nimport ErrorPage from './pages/ErrorPage.js';\nimport Home from './pages/HomePage.js';\nimport EventsRootLayout from './pages/EventsRootLayout.js';\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout />,\n    children: [\n      { index: true, element: <Home /> },\n      {\n        path: \"events\",\n        element: <EventsRootLayout />,\n        children: [\n          {\n            index: true,\n            element: <EventsPage />,\n            loader: async () => {\n              const resp = await fetch(\"http://localhost:8888/events\");\n              if (!resp.ok) {\n                //TODO..Error Message\n                console.log(\"Some error has occured\");\n              }\n              else {\n                const respData = await resp.json();\n                return respData.events;\n              }\n            }\n          },\n          { path: \":id\", element: <EventsDetailsPage /> },\n          { path: \"new\", element: <NewEventsPage /> },\n          { path: \":id/edit\", element: <EditEventPage /> },\n\n        ]\n      },\n    ],\n  }\n])\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,aAAa,MAAM,0BAA0B;AACpD,OAAOC,aAAa,MAAM,0BAA0B;AACpD,OAAOC,iBAAiB,MAAM,8BAA8B;AAC5D,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,IAAI,MAAM,qBAAqB;AACtC,OAAOC,gBAAgB,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,MAAM,GAAGX,mBAAmB,CAAC,CACjC;EACEY,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACL,UAAU;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACvBC,QAAQ,EAAE,CACR;IAAEC,KAAK,EAAE,IAAI;IAAEN,OAAO,eAAEH,OAAA,CAACH,IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EAClC;IACEL,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAEH,OAAA,CAACF,gBAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC7BC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,IAAI;MACXN,OAAO,eAAEH,OAAA,CAACT,UAAU;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACvBG,MAAM,EAAE,MAAAA,CAAA,KAAY;QAClB,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;QACxD,IAAI,CAACD,IAAI,CAACE,EAAE,EAAE;UACZ;UACAC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACvC,CAAC,MACI;UACH,MAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,IAAI,CAAC,CAAC;UAClC,OAAOD,QAAQ,CAACE,MAAM;QACxB;MACF;IACF,CAAC,EACD;MAAEhB,IAAI,EAAE,KAAK;MAAEC,OAAO,eAAEH,OAAA,CAACN,iBAAiB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EAC/C;MAAEL,IAAI,EAAE,KAAK;MAAEC,OAAO,eAAEH,OAAA,CAACR,aAAa;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EAC3C;MAAEL,IAAI,EAAE,UAAU;MAAEC,OAAO,eAAEH,OAAA,CAACP,aAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC;EAGpD,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,SAASY,GAAGA,CAAA,EAAG;EACb,oBAAOnB,OAAA,CAACX,cAAc;IAACY,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACa,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}